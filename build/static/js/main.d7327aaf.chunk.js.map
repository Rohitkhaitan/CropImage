{"version":3,"sources":["firebase/index.js","bookmark.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","database","Bookmark","state","data","list","url","bookmark_name","grid","image","name","image_list","handleUpload","_this$state","_this","cropResult1","cropResult2","cropResult3","cropResult4","console","log","cropper1","props","cropper2","cropper3","cropper4","map","index","strImage","replace","ref","concat","putString","contentType","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","setState","error","child","getDownloadURL","then","push","_this2","this","snap","Object","toConsumableArray","val","event","context","reader","FileReader","target","files","readAsDataURL","onload","e","Image","src","result","height","width","alert","document","getElementsByClassName","getCroppedCanvas","fillColor","imageSmoothingEnabled","imageSmoothingQuality","toDataURL","_this3","classes","react_default","a","createElement","className","root","type","accept","onChange","handleChanges","bind","window","setTimeout","cropImage1","cropImage2","cropImage3","cropImage4","style","paddingTop","display","react_cropper_default","preview","aspectRatio","guides","crop","_crop","float","onClick","alt","GridList_default","cellHeight","gridList","GridListTile_default","key","cols","GridListTileBar_default","title","subtitle","substring","actionIcon","IconButton_default","icon","Info_default","Component","withStyles","theme","color","App","open","handleDrawerOpen","handleDrawerClose","_classNames","_classNames2","CssBaseline_default","AppBar_default","position","classNames","appBar","Toolbar_default","aria-label","menuButton","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","defineProperty","drawerOpen","drawerClose","paper","toolbar","Divider_default","List_default","text","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","content","bookmark","zIndex","marginLeft","marginRight","hide","flexShrink","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","leavingScreen","overflowX","spacing","unit","breakpoints","up","objectSpread","alignItems","justifyContent","padding","mixins","flexGrow","withTheme","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d7327aaf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/database';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyA3kl48PAopu6qY1wdXCMTMXc66p-SGeDc\",\r\n    authDomain: \"image-480de.firebaseapp.com\",\r\n    databaseURL: \"https://image-480de.firebaseio.com\",\r\n    projectId: \"image-480de\",\r\n    storageBucket: \"image-480de.appspot.com\",\r\n    messagingSenderId: \"305796985388\",\r\n    appId: \"1:305796985388:web:995d96006fe00922\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n\r\n  const storage = firebase.storage();\r\n  const database = firebase.database();\r\n\r\n  export {\r\n      storage, database, firebase as default\r\n  }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { storage, database } from './firebase';\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n    //   display: 'flex',\r\n    //   flexWrap: 'wrap',\r\n    //   justifyContent: 'space-around',\r\n    //   overflow: 'hidden',\r\n    //   backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n     \r\n    },\r\n    icon: {\r\n      color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    \r\n});\r\n\r\nclass Bookmark extends Component {\r\n    state = {\r\n        data: null,\r\n        list: [1, 2],\r\n        url: '',\r\n        bookmark_name: '',\r\n        grid: 4,\r\n        image: '',\r\n        name: '',\r\n        image_list: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        var val = database.ref('image_url');\r\n        val.on('child_added', snap => {\r\n            this.setState({ image_list: [...this.state.image_list, snap.val()] });\r\n        });\r\n    }\r\n    handleUpload = () => {\r\n        const { cropResult1, cropResult2, cropResult3, cropResult4 } = this.state;\r\n        console.log(this.state.image_list);\r\n        [[cropResult1, this.cropper1.props.name], [cropResult2, this.cropper2.props.name], [cropResult3, this.cropper3.props.name], [cropResult4, this.cropper4.props.name]].map((data, index) => {\r\n            var strImage = data[0].replace(/^data:image\\/[a-z]+;base64,/, \"\");\r\n            const uploadTask = storage.ref(`images/${data[1]}`).putString(strImage, 'base64', { contentType: 'image/jpg' });\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                      const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                      this.setState({progress});\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                },\r\n                () => {\r\n                    storage.ref('images').child(`${data[1]}`).getDownloadURL().then(url => {\r\n                        var ref = database.ref('image_url');\r\n                        ref.push(url);\r\n                        this.setState({ data: null });\r\n                    })\r\n                });\r\n            return true;\r\n        })\r\n    }\r\n    handleChanges(event) {\r\n        var context = this;\r\n        var reader = new FileReader();\r\n        this.setState({ image: event.target.files[0] })\r\n        this.setState({ name: event.target.files[0].name })\r\n        console.log('img', event.target.files[0])\r\n        reader.readAsDataURL(event.target.files[0]);\r\n        reader.onload = function (e) {\r\n\r\n            var image = new Image();\r\n\r\n            image.src = e.target.result;\r\n\r\n            image.onload = function () {\r\n                var height = this.height;\r\n                var width = this.width;\r\n                if (height !== 1024 || width !== 1024) {\r\n                    alert(\"Uploaded image pixel mismatch.\");\r\n                    console.log(document.getElementsByClassName('image'));\r\n                    return false;\r\n                }\r\n                else if (true) {\r\n                    context.setState({\r\n                        data: image.src\r\n                    })\r\n                    return true;\r\n                }\r\n\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    _crop() {\r\n        // image in dataUrl\r\n        // console.log(this.refs.cropper.getCroppedCanvas().toDataURL());\r\n    }\r\n    cropImage1() {\r\n        if (typeof this.cropper1.getCroppedCanvas() === 'undefined') {\r\n            return;\r\n        }\r\n       \r\n        this.setState({\r\n            cropResult1: this.cropper1.getCroppedCanvas({\r\n                width: 365,\r\n                height: 212,\r\n                fillColor: '#fff',\r\n                imageSmoothingEnabled: false,\r\n                imageSmoothingQuality: 'high',\r\n            }).toDataURL()\r\n        });\r\n    }\r\n    cropImage2() {\r\n        if (typeof this.cropper2.getCroppedCanvas() === 'undefined') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            cropResult2: this.cropper2.getCroppedCanvas({\r\n                width: 365,\r\n                height: 450,\r\n                fillColor: '#fff',\r\n                imageSmoothingEnabled: false,\r\n                imageSmoothingQuality: 'high',\r\n            }).toDataURL(),\r\n        });\r\n    }\r\n    cropImage3() {\r\n        if (typeof this.cropper3.getCroppedCanvas() === 'undefined') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            cropResult3: this.cropper3.getCroppedCanvas({\r\n                width: 380,\r\n                height: 380,\r\n                fillColor: '#fff',\r\n                imageSmoothingEnabled: false,\r\n                imageSmoothingQuality: 'high',\r\n            }).toDataURL(),\r\n        });\r\n    }\r\n    cropImage4() {\r\n        if (typeof this.cropper4.getCroppedCanvas() === 'undefined') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            cropResult4: this.cropper4.getCroppedCanvas({\r\n                width: 755,\r\n                height: 450,\r\n                fillColor: '#fff',\r\n                imageSmoothingEnabled: false,\r\n                imageSmoothingQuality: 'high',\r\n            }).toDataURL(),\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                {/* <div style={{ float: 'right' }}>\r\n                    <div>\r\n                        {this.state.grid === 4 && <img src=\"../asset/list.png\" alt=\"\" height=\"25\" width=\"25\" onClick={this.gridView} />}\r\n                        {this.state.grid === 12 && <img src=\"../asset/grid.png\" alt=\"\" height=\"20\" width=\"20\" onClick={this.gridView} />}\r\n                    </div>\r\n                </div> */}\r\n                <input className='image' type='file' accept='.jpg,.jpeg.,.gif,.png' onChange={(event) => {\r\n                    this.handleChanges.bind(this)(event);\r\n                    const context = this;\r\n                    window.setTimeout(function () {\r\n                        context.cropImage1.bind(context)();\r\n                        context.cropImage2.bind(context)();\r\n                        context.cropImage3.bind(context)();\r\n                        context.cropImage4.bind(context)();\r\n                    }, 500)\r\n                }} />\r\n                {this.state.data !== null &&\r\n                    <div>\r\n                        <div style={{ paddingTop: '50px', display: 'block' }}>\r\n                            <Cropper\r\n                                name={`365x212 ${this.state.name}`}\r\n                                ref={cropper1 => { this.cropper1 = cropper1; }}\r\n                                src={this.state.data}\r\n                                style={{ height: 250, width: 250 }}\r\n                                preview=\".img-preview1\"\r\n                                aspectRatio={365 / 212}\r\n                                guides={false}\r\n                                crop={this._crop.bind(this)} />\r\n                            <div>\r\n                                <div className=\"box\" style={{ width: '50%', float: 'right' }}>\r\n                                    <h1>Preview</h1>\r\n                                    <div className=\"img-preview1\" style={{ width: '100%', float: 'left', height: 300 }} />\r\n                                </div>\r\n                                <div className=\"box\" style={{ width: '50%', float: 'right' }}>\r\n                                    <h1 >\r\n                                        <span>Crop</span>\r\n                                        <button onClick={this.cropImage1.bind(this)} style={{ float: 'right' }}>\r\n                                            Crop Image\r\n                                        </button>\r\n                                    </h1>\r\n                                    <img style={{ width: 365, height: 212 }} src={this.state.cropResult1} alt=\"cropped_image\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ paddingTop: '450px', display: 'block' }}>\r\n                            <Cropper\r\n                                name={`365x450 ${this.state.name}`}\r\n                                ref={cropper2 => { this.cropper2 = cropper2; }}\r\n                                src={this.state.data}\r\n                                style={{ height: 250, width: 250 }}\r\n                                preview=\".img-preview2\"\r\n                                aspectRatio={365 / 450}\r\n                                guides={false}\r\n                                crop={this._crop.bind(this)} />\r\n\r\n                            <div>\r\n                                <div className=\"box\" style={{ width: '50%', float: 'right' }}>\r\n                                    <h1>Preview</h1>\r\n                                    <div className=\"img-preview2\" style={{ width: '100%', float: 'left', height: 300 }} />\r\n                                </div>\r\n                                <div className=\"box\" style={{ width: '50%', float: 'right' }}>\r\n                                    <h1>\r\n                                        <span>Crop</span>\r\n                                        <button onClick={this.cropImage2.bind(this)} style={{ float: 'right' }}>\r\n                                            Crop Image\r\n                                        </button>\r\n                                    </h1>\r\n                                    <img style={{ width: 365, height: 450 }} src={this.state.cropResult2} alt=\"cropped_image\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ paddingTop: '580px', display: 'block' }}>\r\n                            <Cropper\r\n                                name={`380x380 ${this.state.name}`}\r\n                                ref={cropper3 => { this.cropper3 = cropper3; }}\r\n                                src={this.state.data}\r\n                                style={{ height: 250, width: 250 }}\r\n                                preview=\".img-preview3\"\r\n                                aspectRatio={380 / 380}\r\n                                guides={false}\r\n                                crop={this._crop.bind(this)} />\r\n                            <div>\r\n                                <div className=\"box\" style={{ width: '50%', float: 'right' }}>\r\n                                    <h1>Preview</h1>\r\n                                    <div className=\"img-preview3\" style={{ width: '100%', float: 'left', height: 300 }} />\r\n                                </div>\r\n                                <div className=\"box\" style={{ width: '50%', float: 'right' }}>\r\n                                    <h1>\r\n                                        <span>Crop</span>\r\n                                        <button onClick={this.cropImage3.bind(this)} style={{ float: 'right' }}>\r\n                                            Crop Image\r\n                                        </button>\r\n                                    </h1>\r\n                                    <img style={{ width: 380, height: 380 }} src={this.state.cropResult3} alt=\"cropped_image\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ paddingTop: '500px', display: 'block' }}>\r\n                            <Cropper\r\n                                name={`755x450 ${this.state.name}`}\r\n                                ref={cropper4 => { this.cropper4 = cropper4; }}\r\n                                src={this.state.data}\r\n                                style={{ height: 250, width: 250 }}\r\n                                preview=\".img-preview4\"\r\n                                aspectRatio={755 / 450}\r\n                                guides={false}\r\n                                crop={this._crop.bind(this)} />\r\n                            <div>\r\n                                <div className=\"box\" style={{ width: '30%', float: 'right' }}>\r\n                                    <h1>Preview</h1>\r\n                                    <div className=\"img-preview4\" style={{ width: '100%', float: 'left', height: 300 }} />\r\n                                </div>\r\n                                <div className=\"box\" style={{ width: '70%', float: 'right' }}>\r\n                                    <h1>\r\n                                        <span>Crop</span>\r\n                                        <button onClick={this.cropImage4.bind(this)} style={{ float: 'right' }}>\r\n                                            Crop Image\r\n                                        </button>\r\n                                    </h1>\r\n                                    <img style={{ width: 755, height: 450 }} src={this.state.cropResult4} alt=\"cropped_image\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={this.handleUpload.bind(this)}>Upload</button>\r\n                        <button onClick={() => this.setState({ data: null })}>Clear</button>\r\n                    </div>}\r\n                <GridList cellHeight={180} className={classes.gridList}>\r\n                    <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                        {/* <ListSubheader component=\"div\">December</ListSubheader> */}\r\n                    </GridListTile>\r\n                    {this.state.image_list.map((data, index) => (\r\n                        <GridListTile cols={1/2} key={index}>\r\n                            <img src={data} alt={data} />\r\n                            <GridListTileBar\r\n                                title={''}\r\n                                subtitle={<span>size: {data.replace(\"https://firebasestorage.googleapis.com/v0/b/image-480de.appspot.com/o/images%2F\", \"\").substring(0, 7)}</span>}\r\n                                actionIcon={\r\n                                    <IconButton className={classes.icon}>\r\n                                        <InfoIcon />\r\n                                    </IconButton>\r\n                                }\r\n                            />\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nBookmark.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Bookmark);","import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport Bookmark from './bookmark';\nimport './bookmark.css';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    // transition: theme.transitions.create(['width', 'margin'], {\n    //   easing: theme.transitions.easing.sharp,\n    //   duration: theme.transitions.duration.leavingScreen,\n    // }),\n  },\n  // appBarShift: {\n  //   marginLeft: drawerWidth,\n  //   width: `calc(100% - ${drawerWidth}px)`,\n  //   transition: theme.transitions.create(['width', 'margin'], {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.enteringScreen,\n  //   }),\n  // },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing.unit * 7 + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9 + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass App extends Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar)}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Crop Images List\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={classNames(classes.drawer, {\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open,\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerOpen]: this.state.open,\n              [classes.drawerClose]: !this.state.open,\n            }),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbar}>\n          </div>\n          <Divider />\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Bookmark/>\n        </main>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import serviceWorker from './service-worker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}